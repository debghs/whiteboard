name: Build

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags
  workflow_dispatch:

jobs:
  build:
    runs:
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Executable
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            pip install pyinstaller
            pyinstaller --onefile main.py
            mkdir -p build/linux
            mv dist/main build/linux/
          else
            pip install pyinstaller
            pyinstaller --onefile main.py
            # mkdir -p build/windows
            move dist\\main.exe build\\windows\\
          fi

      - name: List build directory contents
        run: ls -R build/

      - name: Commit built binaries
        run: |
          git config --local user.email "dghosh31428@gmail.com"
          git config --local user.name "debghs"
          git add build/
          git commit -m "Add compiled binaries for version ${{ github.ref }}" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }}  # Push to the tag ref
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
